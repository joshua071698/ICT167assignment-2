/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/*
Title: OSPI Library
Author: Joshua Frederick Soriano
Date: 27/May/2020
Filename: client.java, Book.java, Crime.java, Drama.java
Purpose: 
Input: The program will scan the information of books from the txt file called “books.txt”. Then some of the input are when the user tries to search for a certain book by inputting the name of the Author (First and Last name) and the book ID. 
Output: Displays the appropriate output of the different options of the program. Then one of the options is that it enables to create a csv file that fills up the appropriate list of book. 
*/
package ospi;

import java.awt.Component;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.List;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Instant;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.RowSorter.SortKey;
import javax.swing.SortOrder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author joshu
 */
public class client extends javax.swing.JFrame {

    /**
     * Creates new form client
     */
    //declaration of global variables
    public ArrayList<Crime> crimebookarraylist;//array list of crime objects
    public ArrayList<Drama> dramabookarraylist;//array list of drama objects
    public String col[] = {"BookID", "ISBN", "Title", "Author", "Pages", "Borrower", "Days", "Date Issued"};//column headers for table model
    public DefaultTableModel tableModel;//default table model
    public String detail1, detail2, detail3, detail4, detail5, detail6, detail7, selectedGenre;//selected genre serves as an identifier for our functions which genre to process

    public client() 
    {
        initComponents();
        DisableOptions();                                                                                   //disables the panels of menu and options while genre is not selected
        crimebookarraylist = new ArrayList<Crime>();                                                        //instantiate array list
        dramabookarraylist = new ArrayList<Drama>();                                                        //instantiate array list
                                                                                                   
        tableModel = new DefaultTableModel(new Object[0][], col)                                             //this sets the data types per column for table sorting and filtering
        {
            Class[] types = {Integer.class, String.class, String.class, String.class, Integer.class, String.class, Integer.class, String.class};

            @Override
            public Class getColumnClass(int columnIndex) 
            {
                return this.types[columnIndex];
            }
        };
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField10 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jTextField11 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField12 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("OSPI LIBRARY");

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setMaximumSize(new java.awt.Dimension(352, 32767));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("OSPI LIBRARY APP");

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 51, 51));
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setLabel("Quit");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(0, 204, 204));

        jComboBox1.setBackground(new java.awt.Color(132, 53, 0));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Crime", "Drama" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("Please select book genre.");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(0, 204, 204));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("SEARCH"));

        jButton2.setText("Search");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Book ID");

        jLabel11.setText("By Author (Case sensitive)");

        jLabel12.setText("First Name");

        jLabel13.setText("Last Name");

        jButton10.setText("Search");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jLabel11)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13))
                .addGap(2, 2, 2)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(0, 204, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("COMPUTE"));

        jLabel14.setText("Overall outstanding fine");

        jButton7.setText("Compute");
        jButton7.setToolTipText("");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jTextField11.setEditable(false);
        jTextField11.setText("$");

        jLabel15.setText("Get selected book fine");

        jTextField12.setEditable(false);
        jTextField12.setText("$");

        jButton9.setText("Compute");
        jButton9.setToolTipText("");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                        .addComponent(jTextField11, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 102, 153));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(0, 102, 153));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Additional Menu", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 13), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        jButton11.setText("Top three books");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jButton6.setText("Reload");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton5.setText("Export to CSV");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton11)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(0, 102, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "BookID", "ISBN", "Title", "Author", "Pages"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jLabel16.setText("To sort the table, please click the desired column header.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel16)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add the handling code here:
        Object item = jComboBox1.getSelectedItem();                                             //get selected item in combo box
        selectedGenre = item.toString();                                                        //get string value of selected item
        EnableOptions();                                                                        //shows the menus and options in gui
        LoadBookData();                                                                         //loads book.txt data

        //reset global details
        detail1 = "";
        detail2 = "";
        detail3 = "";
        detail4 = "";
        detail5 = "";
        detail6 = "";
        detail7 = "";
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add the handling code here:
        ComputeOutstandingFine();                                                   //function to get total file of what is displayed on the table
    }//GEN-LAST:event_jButton7ActionPerformed

    public void ComputeOutstandingFine() 
    {
        if (selectedGenre.equals("Crime")) 
        {
            int finesum = 0;

            crimebookarraylist = new ArrayList<Crime>();                            //clears our the crime array list

            for (int i = 0; i < jTable1.getRowCount(); i++) 
            {
                //gets the crime object per row
                String[] linedataarr = new String[8];
                linedataarr[0] = jTable1.getValueAt(i, 2).toString();
                linedataarr[1] = jTable1.getValueAt(i, 0).toString();
                linedataarr[2] = jTable1.getValueAt(i, 1).toString();
                linedataarr[3] = jTable1.getValueAt(i, 3).toString();
                linedataarr[4] = jTable1.getValueAt(i, 4).toString();
                linedataarr[5] = jTable1.getValueAt(i, 7).toString();
                linedataarr[6] = jTable1.getValueAt(i, 5).toString();
                linedataarr[7] = selectedGenre;
                crimebookarraylist.add(new Crime(linedataarr));
            }

            for (int i = 0; i < crimebookarraylist.size(); i++)
            {   
                finesum = finesum + crimebookarraylist.get(i).getFine();                        //adds up the fine from crime array list
            }
            jTextField11.setText("$ " + Integer.toString(finesum) + ".00");                      //displays the outstanding fine to gui
        } 
        else                                                                                    //for this program, if genre is not Crime, it is assumed to be Drama
        {
            int finesum = 0;

            dramabookarraylist = new ArrayList<Drama>();                                        //clears our the drama array list

            for (int i = 0; i < jTable1.getRowCount(); i++) 
            {
                //gets the drama object per row
                String[] linedataarr = new String[8];
                linedataarr[0] = jTable1.getValueAt(i, 2).toString();
                linedataarr[1] = jTable1.getValueAt(i, 0).toString();
                linedataarr[2] = jTable1.getValueAt(i, 1).toString();
                linedataarr[3] = jTable1.getValueAt(i, 3).toString();
                linedataarr[4] = jTable1.getValueAt(i, 4).toString();
                linedataarr[5] = jTable1.getValueAt(i, 7).toString();
                linedataarr[6] = jTable1.getValueAt(i, 5).toString();
                linedataarr[7] = selectedGenre;
                dramabookarraylist.add(new Drama(linedataarr));
            }

            for (int i = 0; i < dramabookarraylist.size(); i++) 
            {
                finesum = finesum + dramabookarraylist.get(i).getFine();                    //adds up the fine from drama array list
            } 
            jTextField11.setText("$ " + Integer.toString(finesum) + ".00"); //displays the outstanding fine to gui
        }
    }

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add the handling code here:
        ComputeSelectedFine();                                                              //this function gets the fine for the selected book
    }//GEN-LAST:event_jButton9ActionPerformed
    public void ComputeSelectedFine() 
    {
        if (selectedGenre.equals("Crime")) 
        { 
            Crime crimeselected = new Crime(detail1, detail2, detail3, detail4, detail5, detail6, detail7);     //creates a crime object from the selected item in the table stored in the detail strings         
            jTextField12.setText("$ " + crimeselected.getFine() + ".00");                                       //displays the fine into the gui
        }
        if (selectedGenre.equals("Drama")) 
        {
            Drama dramaselected = new Drama(detail1, detail2, detail3, detail4, detail5, detail6, detail7);     //creates a drama object from the selected item in the table stored in the detail strings
            jTextField12.setText("$ " + dramaselected.getFine() + ".00");                                       //displays the fine into the gui
        }
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add the handling code here:
        FilterAuthor();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add the handling code here:
        FilterBookId();
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add the handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add the handling code here:
        int selectedrow = jTable1.getSelectedRow();//get selected row index
        if (selectedrow > -1 && jTable1.getSelectedRowCount() == 1) 
        {
            //if the selected row exists, this gets the value of the selected row into the detail strings
            detail1 = jTable1.getValueAt(selectedrow, 0).toString();//gets the selected bookid
            detail2 = jTable1.getValueAt(selectedrow, 1).toString();//gets the selected isbn
            detail3 = jTable1.getValueAt(selectedrow, 2).toString();//gets the selected title
            detail4 = jTable1.getValueAt(selectedrow, 3).toString();//gets the selected author
            detail5 = jTable1.getValueAt(selectedrow, 7).toString();//gets the selected date issued
            detail6 = jTable1.getValueAt(selectedrow, 4).toString();//gets the selected pages
            detail7 = jTable1.getValueAt(selectedrow, 5).toString();//gets the selected borrower name
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add the handling code here:
        SaveTableToCSV();//exports the currently displayed table into csv file
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add the handling code here:
        LoadBookData();//loads the fresh book data
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add the handling code here:
        //this button displays the top three books by days borrowed
        LoadBookData();                                                                                 //loads the fresh book data
        SortTopDays();                                                                                  //this function sorts the days from the largest days borrowed
        ViewTop(3);                                                                                     //this function views only the first 3 rows of the table
    }//GEN-LAST:event_jButton11ActionPerformed

    private void SortTopDays() 
    {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());             //create sorter for table model
        jTable1.setRowSorter(sorter);                                                                       //sets the sorter to actual jtable
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();                         //creates array list of sortKeys

        int columnIndexToSort = 6;                                                                          //the column index to sort, 6 which is 'days'
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.DESCENDING));                       //descending for sort from largest to lowest

        sorter.setSortKeys(sortKeys);                                                                       //set the row sort key to jtable sorter
        sorter.sort();                                                                                      //performs sorting
    }

    private void SortLeastDays() 
    {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());             //create sorter for table model
        jTable1.setRowSorter(sorter);                                                                       //sets the sorter to actual jtable
        ArrayList<RowSorter.SortKey> sortKeys = new ArrayList<RowSorter.SortKey>();                         //creates array list of sortKeys

        int columnIndexToSort = 6;                                                                          //the column index to sort, 6 which is 'days'
        sortKeys.add(new RowSorter.SortKey(columnIndexToSort, SortOrder.ASCENDING));                        //ascending for sort from lowest to largest

        sorter.setSortKeys(sortKeys);                                                                       //set the row sort key to jtable sorter
        sorter.sort();                                                                                      //performs sorting
    }

    private void ViewTop(int count) 
    {
        ArrayList<Book> bookarraylist = new ArrayList<Book>();                                              //creates an array list of book class

        for (int i = 0; i < count; i++) 
        {
            String[] linedataarr = new String[8];                                                           //instantiates a string array with 8 array count
            //loads table data to book object
            linedataarr[0] = jTable1.getValueAt(i, 2).toString();
            linedataarr[1] = jTable1.getValueAt(i, 0).toString();
            linedataarr[2] = jTable1.getValueAt(i, 1).toString();
            linedataarr[3] = jTable1.getValueAt(i, 3).toString();
            linedataarr[4] = jTable1.getValueAt(i, 4).toString();
            linedataarr[5] = jTable1.getValueAt(i, 7).toString();
            linedataarr[6] = jTable1.getValueAt(i, 5).toString();
            linedataarr[7] = selectedGenre;
            //creates book object and adds it to book aray list
            bookarraylist.add(new Book(linedataarr[0], Integer.parseInt(linedataarr[1].replaceAll("\\s+", "")), linedataarr[2], linedataarr[3], Integer.parseInt(linedataarr[4].replaceAll("\\s+", "")), linedataarr[5], linedataarr[6]));
        }

        
        tableModel = new DefaultTableModel(new Object[0][], col)                                    //creates new table model
        {
            Class[] types = {Integer.class, String.class, String.class, String.class, Integer.class, String.class, Integer.class, String.class};

            @Override
            public Class getColumnClass(int columnIndex) 
            {
                return this.types[columnIndex];
            }
        };

        for (int i = 0; i < bookarraylist.size(); i++)                          //gets details from each book in the array list
        {
            int bookid = bookarraylist.get(i).getBookID();
            String isbn = bookarraylist.get(i).getISBN();
            String title = bookarraylist.get(i).getBookTitle();
            String author = bookarraylist.get(i).getAuthor();
            int pages = bookarraylist.get(i).getPages();
            String borrower = bookarraylist.get(i).getBName();
            int daysborrowed = bookarraylist.get(i).getDays();
            String dateissued = bookarraylist.get(i).getDate();  
            Object[] data = {bookid, isbn, title, author, pages, borrower, daysborrowed, dateissued};  //adds the details into an object to be insert to the table model
            tableModel.addRow(data);                                                //adds the object to fresh tableModel
        }
        jTable1.setModel(tableModel);                                               //sets the fresh table model to the jtable
    }

    private void SaveTableToCSV() 
    {
        ArrayList<String> listStringToSave = new ArrayList<String>();                     //this array list contains the strings to be saved to csv file per line
        for (int i = 0; i < jTable1.getRowCount(); i++) 
        {
            String[] linedataarr = new String[8];                                               //instantiates a string array with up to 8 strings
            //gets the data in the original column order based on book.txt
            linedataarr[0] = jTable1.getValueAt(i, 2).toString();
            linedataarr[1] = jTable1.getValueAt(i, 0).toString();
            linedataarr[2] = jTable1.getValueAt(i, 1).toString();
            linedataarr[3] = jTable1.getValueAt(i, 3).toString();
            linedataarr[4] = jTable1.getValueAt(i, 4).toString();
            linedataarr[5] = jTable1.getValueAt(i, 7).toString();
            linedataarr[6] = jTable1.getValueAt(i, 5).toString();
            linedataarr[7] = selectedGenre;
            listStringToSave.add(String.join(",", linedataarr));                     //joins the string array with a comma and adds it to a line that will be saved to csv
        }
        try 
        {
            Date datenow = Date.from(Instant.now());                                    //gets the current date time
            DateFormat dateFormat = new SimpleDateFormat("dd_MM_yyyy hh_mm_ss");        //sets the format for the date string
            FileWriter writer = new FileWriter(selectedGenre + " " + dateFormat.format(datenow) + ".csv");//creates a file named 'genre' dd_MM_yyyy hh_mm_ss.csv (example : Crime 13_05_2020 10_03_35.csv)
            for (String str : listStringToSave) 
            {                                       
                writer.write(str + System.lineSeparator());                         //line by line writing based on the list string
            }
            writer.close();                                                         //closes the file writer
            JOptionPane.showMessageDialog(null, "Success writing csv file. " + System.getProperty("user.dir") + "\\" + selectedGenre + " " + dateFormat.format(datenow) + ".csv");   //creates a popup that shows csv file is created successfully
        } 
        catch (Exception excep) 
        {
            JOptionPane.showMessageDialog(null, excep.getMessage());        //creates a popup that shows an encountered error
        }
    }

    private void FilterAuthor() 
    {
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(tableModel);          //create sorter for table model
        jTable1.setRowSorter(trs);                                                                          //sets the sorter to actual jtable
        if (!jTextField9.getText().isEmpty() && !jTextField10.getText().isEmpty())                          //if first name and last name contains a string
        {
            String[] words = {jTextField9.getText(), jTextField10.getText()};
            StringBuilder regexp = new StringBuilder();                             //creates a string for a regex expression to sort both first name and last name
            for (String word : words) 
            {
                regexp.append("(?=.*").append(word).append(")");
            }
            trs.setRowFilter(RowFilter.regexFilter(regexp.toString(), 3));              //filters the table based on the regex result for both first and last name
        }
        if (!jTextField9.getText().isEmpty() && jTextField10.getText().isEmpty()) 
        {
            trs.setRowFilter(RowFilter.regexFilter(jTextField9.getText(), 3));          //filters the table based on the regex result for first name
        }
        if (jTextField9.getText().isEmpty() && !jTextField10.getText().isEmpty()) 
        {
            trs.setRowFilter(RowFilter.regexFilter(jTextField10.getText(), 3));            //filters the table based on the regex result for last name
        }

    }

    private void FilterBookId() 
    {
        TableRowSorter<DefaultTableModel> trs = new TableRowSorter<DefaultTableModel>(tableModel);          //create sorter for table model
        jTable1.setRowSorter(trs);                                                                          //sets the sorter to actual jtable
        trs.setRowFilter(RowFilter.regexFilter(jTextField8.getText(), 0));                                  //filters the table based on the regex result for book id
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() 
        {
            public void run() 
            {
                new client().setVisible(true);
            }
        });
    }

    public void DisableOptions() 
    {
        jPanel4.setVisible(false);
        jPanel5.setVisible(false);
        jPanel2.setVisible(false);
    }

    public void EnableOptions() 
    {
        jPanel4.setVisible(true);
        jPanel2.setVisible(true);
        jPanel5.setVisible(true);
    }

    public void LoadBookData() 
    {  
        detail1 = "";detail2 = "";detail3 = "";detail4 = "";detail5 = "";detail6 = "";detail7 = "";     //clears out the global details variables
        tableModel = new DefaultTableModel(new Object[0][], col)                        //creates a new table model with specified data types
        {
            Class[] types = {Integer.class, String.class, String.class, String.class, Integer.class, String.class, Integer.class, String.class};

            @Override
            public Class getColumnClass(int columnIndex) 
            {
                return this.types[columnIndex];
            }
        };
        
        if (selectedGenre.equals("Crime")) 
        {
            crimebookarraylist = new ArrayList<Crime>();                                    //creates new array list of crime objects
            crimebookarraylist = LoadCrimes();                                              //loads crime objects from book.txt
            for (int i = 0; i < crimebookarraylist.size(); i++) 
            {
                int bookid = crimebookarraylist.get(i).getBookID();                         //gets the detail for each crim in the array list
                String isbn = crimebookarraylist.get(i).getISBN();
                String title = crimebookarraylist.get(i).getBookTitle();
                String author = crimebookarraylist.get(i).getAuthor();
                int pages = crimebookarraylist.get(i).getPages();
                String borrower = crimebookarraylist.get(i).getBName();
                int daysborrowed = crimebookarraylist.get(i).getDays();
                String dateissued = crimebookarraylist.get(i).getDate(); 
                Object[] data = {bookid, isbn, title, author, pages, borrower, daysborrowed, dateissued};   //loads the details into an object array             
                tableModel.addRow(data);             //adds the object array to table model
            }
            jTable1.setModel(tableModel);                                       //sets the table model to be viewed in jtable
            resizeColumnWidth(jTable1);                                         //this method improves how the user will see the table by auto resizing its columns
            jTable1.setAutoCreateRowSorter(true);                               //this enables the table to have a column sorter in the gui
        } 
        else        //for this program, if genre is not Crime, it is assumed to be Drama
        {
            dramabookarraylist = new ArrayList<Drama>();                            //creates new array list of drama objects
            dramabookarraylist = LoadDramas();                                      //loads drama objects from book.txt
            for (int i = 0; i < dramabookarraylist.size(); i++) 
            {
                //gets the detail for each crim in the array list
                int bookid = dramabookarraylist.get(i).getBookID();
                String isbn = dramabookarraylist.get(i).getISBN();
                String title = dramabookarraylist.get(i).getBookTitle();
                String author = dramabookarraylist.get(i).getAuthor();
                int pages = dramabookarraylist.get(i).getPages();
                String borrower = dramabookarraylist.get(i).getBName();
                int daysborrowed = dramabookarraylist.get(i).getDays();
                String dateissued = dramabookarraylist.get(i).getDate();
                Object[] data = {bookid, isbn, title, author, pages, borrower, daysborrowed, dateissued};    //loads the details into an object array
                tableModel.addRow(data);                                        //adds the object array to table model
            }
            jTable1.setModel(tableModel);
            resizeColumnWidth(jTable1);                                          //this method improves how the user will see the table by auto resizing its columns
            jTable1.setAutoCreateRowSorter(true);                                //this enables the table to have a column sorter in the gui
        }
    }

    public void AscendingBookId() 
    {
        TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(jTable1.getModel());         //creates sorter for table model
        jTable1.setRowSorter(sorter);                                                                   //sets the sorter into the actual jtable
        List<SortKey> sortKeys = new ArrayList<>(8);
        sortKeys.add(new RowSorter.SortKey(0, SortOrder.ASCENDING));                                    //sorts book id column in ascending order
        sorter.setSortKeys(sortKeys);
    }

    public ArrayList<Crime> LoadCrimes() 
    {
        ArrayList<Crime> crimebookarraylist = new ArrayList<Crime>();                               //creates array list of crime objects
        try (BufferedReader br = new BufferedReader(new FileReader("book.txt")))                    //reads book.txt
        {
            String line;
            while ((line = br.readLine()) != null) 
            {
                // process the line.
                String[] arr;
                arr = line.split(",");                                              //splits the line by comma into a string array

                if (arr[7].toLowerCase().contains("drama"))                         //if genre is for drama, this line does not get added to the array list crime object
                {
                    continue;
                }
                Crime crimeobj = new Crime(arr);                                //creates a crime object from the string array
                crimebookarraylist.add(crimeobj);                               //adds the crime object to array list
            }
        } 
        catch (Exception e) 
        {
            String ex = e.toString();
        }
        return crimebookarraylist;
    }

    public ArrayList<Drama> LoadDramas() 
    {
        ArrayList<Drama> dramabookarraylist = new ArrayList<Drama>();                   //creates array list of drama objects
        try (BufferedReader br = new BufferedReader(new FileReader("book.txt")))        //reads book.txt
        {
            String line;
            while ((line = br.readLine()) != null) 
            {
                // process the line.
                String[] arr;
                arr = line.split(",");                                              //splits the line by comma into a string array
                if (arr[7].toLowerCase().contains("crime"))                         //if genre is for crime, this line does not get added to the array list drama object
                {
                    continue;
                }
                Drama crimeobj = new Drama(arr);                                     //creates a drama object from the string array
                dramabookarraylist.add(crimeobj);                                    //adds the drama object to array list
            }
        } 
        catch (Exception e) 
        {
            String ex = e.toString();
        }
        return dramabookarraylist;                                                  //returns the array list
    }

    public void resizeColumnWidth(JTable table) 
    {
        //gui code handling for automatically resizing columns
        table.getParent().addComponentListener(new ComponentAdapter() 
        {
            public void componentResized(final ComponentEvent e) 
            {
                if (table.getPreferredSize().width < table.getParent().getWidth()) 
                {
                    table.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
                } 
                else 
                {
                    table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
                }
            }
        });

        final TableColumnModel columnModel = table.getColumnModel();
        for (int column = 0; column < table.getColumnCount(); column++)
        {
            int width = 60;                                                         // Min width
            for (int row = 0; row < table.getRowCount(); row++) 
            {
                TableCellRenderer renderer = table.getCellRenderer(row, column);
                Component comp = table.prepareRenderer(renderer, row, column);
                width = Math.max(comp.getPreferredSize().width + 1, width);
            }
            if (width > 300) 
            {
                width = 300;
            }
            columnModel.getColumn(column).setPreferredWidth(width);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    // End of variables declaration//GEN-END:variables
}
